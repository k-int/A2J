/* Generated By:JJTree: Do not edit this line. ASTModuleDefinition.java */

package com.k_int.codec.comp;

import java.io.File;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


public class ASTModuleDefinition extends SimpleNode {

  public ASTModuleIdentifier identifier = null;
  private Log log = LogFactory.getLog(this.getClass());

  public ASTModuleDefinition(int id) {
    super(id);
  }

  public ASTModuleDefinition(AsnParser p, int id) {
    super(p, id);
  }

  public void pass1()
  {
    log.debug("    ASTModuleDefinition::pass1");

    CodecBuilderInfo info = CodecBuilderInfo.getInfo();
    int i, k = jjtGetNumChildren();

    identifier = (ASTModuleIdentifier) jjtGetChild(0);
    info.setCurrentModuleName(identifier.getModuleReference().module_ref);

    boolean default_tagging_is_explicit = true;

    if ( jjtGetNumChildren() == 3 ) // Then we have a default tagging clause
    {
      if ( ((ASTTagDefault)(jjtGetChild(1))).which == 2 )
        default_tagging_is_explicit = false;
    }

    info.registerModule(identifier.getModuleReference().module_ref,default_tagging_is_explicit,true);

    for (i = 0; i < k; i++)
    {
      jjtGetChild(i).pass1();
    }

  }
}
